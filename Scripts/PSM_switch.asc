PSM_SWITCH


# TODO aggiungere commenti e fare iot logic
PROCEDURE global PSM_SWITCH
{
    CC "Modeling" GET_ACT_MODEL
	SET sourceModelId:(modelid)
	IF (sourceModelId = -1) {
        CC "AdoScript" WARNINGBOX ("Select an empty IoT scenario PSM or IoT Logic PSM model to proceed") title:("Invalid model")
        EXIT
    }
	CC "Core" GET_MODEL_MODELTYPE modelid:(sourceModelId)
    CC "Core" GET_ATTR_VAL objid:(modelid) attrname:("Model Type")
    IF(val = "PIM" OR (modeltype != "IoT Scenario" AND modeltype != "IoT Logic")) {
        CC "AdoScript" WARNINGBOX ("Select an empty IoT scenario PSM or IoT Logic PSM model to proceed") title:("Invalid model")
        EXIT
    }

    SET selectedPlatform:""
    SELECT_PLATFORM platformSelected:selectedPlatform
    
    IF(selectedPlatform = "") {
        EXIT
    }

    CC "CoreUI" MODEL_SELECT_BOX without-models mgroup-sel title:"Select a target modelgroup"
    IF (endbutton != "ok") {
        EXIT
    }

    # New model setup
    CC "Core" GET_MODEL_INFO modelid:(modelid)
    IF(modeltype ="IoT Scenario") {
        CC "Core" CREATE_MODEL modeltype:("IoT Scenario") modelname:(modelname + " - " + selectedPlatform) version:"" mgroups:(mgroupids)
    } ELSIF (modeltype = "IoT Logic") {
        CC "Core" CREATE_MODEL modeltype:("IoT Logic") modelname:(modelname + " - " + selectedPlatform) version:"" mgroups:(mgroupids)
    }
    SET destinationModelId:(modelid)
    CC "Modeling" OPEN modelids:(destinationModelId)
    CC "Modeling" SET_VIEW_MODE modelid:(destinationModelId) mode-name:"PSM"
    CC "Core" SET_ATTR_VAL objid:(destinationModelId) attrname:"Model Type" val:("PSM")
    CC "Core" SET_ATTR_VAL objid:(destinationModelId) attrname:"Platform" val:(selectedPlatform)

    # LOAD ALL OBJECTS FROM THE SOURCE MODEL
    # - from PIM_TO_PSM.asc 
    CC "Core" GET_ALL_OBJS modelid:(sourceModelId)
    SETL a_instids:(objids)

    # Get all connectors
    CC "Core" GET_ALL_CONNECTORS modelid:(sourceModelId)
    SETL a_relinstids:(objids)

    ## 1.
    # Copy all elements
    CC "Core" CREATE_COPYBUFFER index:0
    CC "Core" FILL_COPYBUFFER index:0 instids:(a_instids) relinstids:(a_relinstids)

    ## 4.
    # Paste elements in the new model
    CC "Core" PASTE_COPYBUFFER index:0 modelid:(destinationModelId)
    SETL g_acreatedinstids:(instids)
    SETL g_acreatedrelinstids:(relinstids)

    # Delete buffer
    CC "Core" DELETE_COPYBUFFER index:0

    ## 6.
    # Get all objects from new model
    CC "Core" GET_ALL_OBJS modelid:(destinationModelId)
    IF (ecode != 0) {
        CC "AdoScript" ERRORBOX "Something went very wrong here (e.g. we passed the wrong model id)!\n"
        CC "Modeling" CLOSE modelid:(destinationModelId) quiet
        CC "Core" DELETE_MODEL modelid:(destinationModelId)
        SETL targetID:-1
        EXIT
    }

    ## 2.
    # Get specifications
    SET specs:("")
    GET_SPECIFICATIONS platform:(selectedPlatform) specs:specs

    # Add PSM attributes to objects
    FOR obj in:(objids) {

        CC "Core" GET_CLASS_ID objid:(VAL obj)
        CC "Core" GET_ATTR_ID classid:(classid) attrname:"specification"
        
        SETL specificationAttrId:(attrid)
        CC "Core" GET_ALL_REC_ATTR_ROW_IDS objid:(VAL obj) attrid:(specificationAttrId)
        IF(ecode!=0) {
            NEXT
        }
        SETL specRecRowids:(rowids)

        CC "Core" GET_ATTR_ID classid:(classid) attrname:"platformData"
        SETL platformDataAttrId:(attrid)

        FOR r in:(specRecRowids) {
            # get specification table rows' attributes
            CC "Core" GET_ATTR_VAL objid:(VAL r) attrname:("Value")
            SETL temporaryVal:(val)
            CC "Core" GET_ATTR_VAL objid:(VAL r) attrname:("Attribute")
            SETL temporaryAttr:(val)
            # clean specification table
            CC "Core" REMOVE_REC_ROW objid:(VAL obj) attrid:(specificationAttrId) rowid:(VAL r)
            # then fill platformData with the temporary values
            CC "Core" ADD_REC_ROW objid:(VAL obj) attrid:(platformDataAttrId)
            CC "Core" SET_ATTR_VAL objid:(rowid) attrname:("Value") val:(temporaryVal)
            CC "Core" SET_ATTR_VAL objid:(rowid) attrname:("Attribute") val:(temporaryAttr)
        }

        # clean old parameters
        CC "Core" SET_ATTR_VAL objid:(VAL obj) attrname:("available_types") val:("")
        CC "Core" SET_ATTR_VAL objid:(VAL obj) attrname:("psm_type") val:("")

        # set selected platform specifcation
        SET_SPECIFICATIONS objID:(obj) specs:(specs)
    }

    ## 7.
    # Save and discard model
    CC "Core" SAVE_MODEL modelid:(destinationModelId)
}


#               
#   ------------------   MISCELLANEOUS   ------------------
#

# model list box with exception handling on selected model based on actual model
PROCEDURE global SELECT_PLATFORM 
platformSelected:reference
{
    CC "Core" GET_ATTR_VAL objid:(sourceModelId) attrname:("Platform")

    # filter
    IF(val="Azure") {
        SETL chooseDestinationPlatform:("Losant;ThingsBoard")
    } ELSIF(val="Losant") {
        SETL chooseDestinationPlatform:("Azure;ThingsBoard")
    } ELSIF(val="ThingsBoard") {
        SETL chooseDestinationPlatform:("Azure;Losant")
    }

    CC "AdoScript" MLISTBOX entries:(chooseDestinationPlatform)
            toksep:";"
            title:"Select platform"
            oktext:"Switch"
            boxtext:"Select your desired platform"

    IF (endbutton != "ok") {
        EXIT
    }

    SET platformSelected:(selection)
}

